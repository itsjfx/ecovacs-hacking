#!/usr/bin/env bash

# patch script for rootfs
# usage: patch-rootfs rootfs.img --dropbear AUTHORIZED_KEY_FILE --install-cert CERT_FILE

set -eu -o pipefail

# helpers
log() { printf '%s\n' "$*" >&2; }


# patches
dropbear() {
    log 'Creating host keys...'
    mkdir -p -m 755 "$IMG"/etc/dropbear
    for type in rsa ecdsa ed25519; do
        dropbearkey -t "$type" -f "$IMG"/etc/dropbear/dropbear_"$type"_host_key -C robot
    done

    log 'Patching /etc/shells to allow /bin/sh...'
    echo /bin/sh >> "$IMG"/etc/shells

    log 'Adding dropbear binaries...'
    install -m 0755 "$ROOT"/rootfs/usr/sbin/dropbear "$IMG"/usr/sbin/dropbear
    for cmd in dbclient dropbearkey dropbearconvert scp; do
        ln -sr "$IMG"/usr/sbin/dropbear "$IMG"/usr/bin/"$cmd"
    done

    log 'Adding key...'
    mkdir -p -m 700 "$IMG"/root/.ssh/
    # assume its one line and well-formed
    install -m 0600 "$1" "$IMG"/root/.ssh/authorized_keys
}

add_cert() {
    log "Adding cert $1..."
    local cert
    cert="$(cat "$1")"
    # append
    echo "$cert">>"$IMG"/etc/ssl/certs/ecouser-net.pem
    echo "$cert">>"$IMG"/etc/ssl/certs/iotspeechwss.pem
    echo "$cert">>"$IMG"/etc/ssl/certs/kvswebrtccert.pem
    echo "$cert">>"$IMG"/etc/ssl/certs/ca-certificates.crt
}


# main
ROOT="$(readlink -f "$(dirname "$0")/../")"

rootfs="$1"
if ! [ -f "$rootfs" ]; then
    log "rootfs file: $rootfs not found"
    exit 1
fi
shift

IMG="$(mktemp -d)"
IMG_OLD="$(mktemp -d)"
trap 'rm -rf -- "$IMG" "$IMG_OLD"' EXIT
log "Working from $IMG"
unsquashfs -d "$IMG" "$rootfs"
unsquashfs -d "$IMG_OLD" "$rootfs"

args="$*"
while (( $# )); do
    case "$1" in
        --dropbear) dropbear "$2"; shift ;;
        --add-cert) add_cert "$2"; shift ;;
        --keep) trap 'rm -rf -- "$IMG_OLD"' EXIT ;;
    esac
    shift || true
done


# always do these patches
log 'Patching autostart.sh and dropbear.sh to init...'
sed -i 's/\!autostart.sh/autostart.sh dropbear.sh/' "$IMG"/etc/rc.conf
install -m 0755 "$ROOT"/rootfs/etc/rc.d/dropbear.sh "$IMG"/etc/rc.d/dropbear.sh

log 'Adding patch.txt...'
echo "patched $(date --iso-8601=seconds --utc) with args: $args" >"$IMG"/root/patch.txt

printf '\n\n'
diff --no-dereference -r -N "$IMG_OLD" "$IMG" || true

log "Remaking squashfs to $rootfs.mod"
mksquashfs "$IMG" "$rootfs".mod -noappend -root-owned -p '/dev d 755 0 0' -p '/dev/console c 600 0 0 5 1'
